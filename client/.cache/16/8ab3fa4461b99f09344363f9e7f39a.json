{"id":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","dependencies":[{"name":"/Users/kt/Desktop/NUS/Omega Studio/OmegaCity/omegacity-phaser/client/package.json","includedInParent":true,"mtime":1710589196265},{"name":"/Users/kt/Desktop/NUS/Omega Studio/OmegaCity/omegacity-phaser/client/node_modules/phaser3-rex-plugins/package.json","includedInParent":true,"mtime":1708649809960}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n// Reference: https://medium.com/neosavvy-labs/webgl-with-perlin-noise-part-1-a87b56bbc9fb\nconst frag = `\\\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec4 mod289(vec4 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec4 permute(vec4 x) { return mod289(((x*34.0)+1.0)*x); }\nvec4 taylorInvSqrt(vec4 r) { return 1.79284291400159 - 0.85373472095314 * r; }\nvec3 fade(vec3 t) { return t*t*t*(t*(t*6.0-15.0)+10.0); }\nfloat Perlin(vec3 P) {\n    vec3 i0 = mod289(floor(P)), i1 = mod289(i0 + vec3(1.0));\n    vec3 f0 = fract(P), f1 = f0 - vec3(1.0), f = fade(f0);\n    vec4 ix = vec4(i0.x, i1.x, i0.x, i1.x), iy = vec4(i0.yy, i1.yy);\n    vec4 iz0 = i0.zzzz, iz1 = i1.zzzz;\n    vec4 ixy = permute(permute(ix) + iy), ixy0 = permute(ixy + iz0), ixy1 = permute(ixy + iz1);\n    vec4 gx0 = ixy0 * (1.0 / 7.0), gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n    vec4 gx1 = ixy1 * (1.0 / 7.0), gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n    gx0 = fract(gx0); gx1 = fract(gx1);\n    vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0), sz0 = step(gz0, vec4(0.0));\n    vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1), sz1 = step(gz1, vec4(0.0));\n    gx0 -= sz0 * (step(0.0, gx0) - 0.5); gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n    gx1 -= sz1 * (step(0.0, gx1) - 0.5); gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n    vec3 g0 = vec3(gx0.x,gy0.x,gz0.x), g1 = vec3(gx0.y,gy0.y,gz0.y),\n        g2 = vec3(gx0.z,gy0.z,gz0.z), g3 = vec3(gx0.w,gy0.w,gz0.w),\n        g4 = vec3(gx1.x,gy1.x,gz1.x), g5 = vec3(gx1.y,gy1.y,gz1.y),\n        g6 = vec3(gx1.z,gy1.z,gz1.z), g7 = vec3(gx1.w,gy1.w,gz1.w);\n    vec4 norm0 = taylorInvSqrt(vec4(dot(g0,g0), dot(g2,g2), dot(g1,g1), dot(g3,g3)));\n    vec4 norm1 = taylorInvSqrt(vec4(dot(g4,g4), dot(g6,g6), dot(g5,g5), dot(g7,g7)));\n    g0 *= norm0.x; g2 *= norm0.y; g1 *= norm0.z; g3 *= norm0.w;\n    g4 *= norm1.x; g6 *= norm1.y; g5 *= norm1.z; g7 *= norm1.w;\n    vec4 nz = mix(vec4(dot(g0, vec3(f0.x, f0.y, f0.z)), dot(g1, vec3(f1.x, f0.y, f0.z)),\n        dot(g2, vec3(f0.x, f1.y, f0.z)), dot(g3, vec3(f1.x, f1.y, f0.z))),\n        vec4(dot(g4, vec3(f0.x, f0.y, f1.z)), dot(g5, vec3(f1.x, f0.y, f1.z)),\n            dot(g6, vec3(f0.x, f1.y, f1.z)), dot(g7, vec3(f1.x, f1.y, f1.z))), f.z);\n    return 2.2 * mix(mix(nz.x,nz.z,f.y), mix(nz.y,nz.w,f.y), f.x);\n}\nfloat Perlin(vec2 P) { return Perlin(vec3(P, 0.0)); }\n`;\nvar _default = exports.default = frag;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":2,"column":0}},{"generated":{"line":8,"column":6},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":2,"column":6},"name":"frag"},{"generated":{"line":8,"column":10},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":2,"column":10}},{"generated":{"line":8,"column":13},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":2,"column":14}},{"generated":{"line":9,"column":0},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":4,"column":0}},{"generated":{"line":11,"column":0},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":5,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":6,"column":0}},{"generated":{"line":13,"column":0},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":7,"column":0}},{"generated":{"line":14,"column":0},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":8,"column":0}},{"generated":{"line":15,"column":0},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":9,"column":0}},{"generated":{"line":16,"column":0},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":10,"column":0}},{"generated":{"line":17,"column":0},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":11,"column":0}},{"generated":{"line":18,"column":0},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":12,"column":0}},{"generated":{"line":19,"column":0},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":13,"column":0}},{"generated":{"line":20,"column":0},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":14,"column":0}},{"generated":{"line":21,"column":0},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":15,"column":0}},{"generated":{"line":22,"column":0},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":16,"column":0}},{"generated":{"line":23,"column":0},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":17,"column":0}},{"generated":{"line":24,"column":0},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":18,"column":0}},{"generated":{"line":25,"column":0},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":19,"column":0}},{"generated":{"line":26,"column":0},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":20,"column":0}},{"generated":{"line":27,"column":0},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":21,"column":0}},{"generated":{"line":28,"column":0},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":22,"column":0}},{"generated":{"line":29,"column":0},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":23,"column":0}},{"generated":{"line":30,"column":0},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":24,"column":0}},{"generated":{"line":31,"column":0},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":25,"column":0}},{"generated":{"line":32,"column":0},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":26,"column":0}},{"generated":{"line":33,"column":0},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":27,"column":0}},{"generated":{"line":34,"column":0},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":28,"column":0}},{"generated":{"line":35,"column":0},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":29,"column":0}},{"generated":{"line":36,"column":0},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":30,"column":0}},{"generated":{"line":37,"column":0},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":31,"column":0}},{"generated":{"line":38,"column":0},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":32,"column":0}},{"generated":{"line":39,"column":0},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":33,"column":0}},{"generated":{"line":40,"column":0},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":34,"column":0}},{"generated":{"line":41,"column":0},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":35,"column":0}},{"generated":{"line":42,"column":0},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":36,"column":0}},{"generated":{"line":42,"column":1},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":36,"column":1}},{"generated":{"line":43,"column":0},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":36,"column":2}},{"generated":{"line":43,"column":4},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":36,"column":2},"name":"_default"},{"generated":{"line":43,"column":12},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":36,"column":2}},{"generated":{"line":43,"column":15},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":36,"column":2},"name":"exports"},{"generated":{"line":43,"column":22},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":36,"column":2}},{"generated":{"line":43,"column":23},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":36,"column":2},"name":"default"},{"generated":{"line":43,"column":30},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":36,"column":2}},{"generated":{"line":43,"column":33},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":38,"column":15},"name":"frag"},{"generated":{"line":43,"column":37},"source":"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js","original":{"line":38,"column":19}}],"sources":{"../node_modules/phaser3-rex-plugins/plugins/shaders/utils/noise/Perlin.js":"// Reference: https://medium.com/neosavvy-labs/webgl-with-perlin-noise-part-1-a87b56bbc9fb\r\nconst frag = `\\\r\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\r\nvec4 mod289(vec4 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\r\nvec4 permute(vec4 x) { return mod289(((x*34.0)+1.0)*x); }\r\nvec4 taylorInvSqrt(vec4 r) { return 1.79284291400159 - 0.85373472095314 * r; }\r\nvec3 fade(vec3 t) { return t*t*t*(t*(t*6.0-15.0)+10.0); }\r\nfloat Perlin(vec3 P) {\r\n    vec3 i0 = mod289(floor(P)), i1 = mod289(i0 + vec3(1.0));\r\n    vec3 f0 = fract(P), f1 = f0 - vec3(1.0), f = fade(f0);\r\n    vec4 ix = vec4(i0.x, i1.x, i0.x, i1.x), iy = vec4(i0.yy, i1.yy);\r\n    vec4 iz0 = i0.zzzz, iz1 = i1.zzzz;\r\n    vec4 ixy = permute(permute(ix) + iy), ixy0 = permute(ixy + iz0), ixy1 = permute(ixy + iz1);\r\n    vec4 gx0 = ixy0 * (1.0 / 7.0), gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\r\n    vec4 gx1 = ixy1 * (1.0 / 7.0), gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\r\n    gx0 = fract(gx0); gx1 = fract(gx1);\r\n    vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0), sz0 = step(gz0, vec4(0.0));\r\n    vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1), sz1 = step(gz1, vec4(0.0));\r\n    gx0 -= sz0 * (step(0.0, gx0) - 0.5); gy0 -= sz0 * (step(0.0, gy0) - 0.5);\r\n    gx1 -= sz1 * (step(0.0, gx1) - 0.5); gy1 -= sz1 * (step(0.0, gy1) - 0.5);\r\n    vec3 g0 = vec3(gx0.x,gy0.x,gz0.x), g1 = vec3(gx0.y,gy0.y,gz0.y),\r\n        g2 = vec3(gx0.z,gy0.z,gz0.z), g3 = vec3(gx0.w,gy0.w,gz0.w),\r\n        g4 = vec3(gx1.x,gy1.x,gz1.x), g5 = vec3(gx1.y,gy1.y,gz1.y),\r\n        g6 = vec3(gx1.z,gy1.z,gz1.z), g7 = vec3(gx1.w,gy1.w,gz1.w);\r\n    vec4 norm0 = taylorInvSqrt(vec4(dot(g0,g0), dot(g2,g2), dot(g1,g1), dot(g3,g3)));\r\n    vec4 norm1 = taylorInvSqrt(vec4(dot(g4,g4), dot(g6,g6), dot(g5,g5), dot(g7,g7)));\r\n    g0 *= norm0.x; g2 *= norm0.y; g1 *= norm0.z; g3 *= norm0.w;\r\n    g4 *= norm1.x; g6 *= norm1.y; g5 *= norm1.z; g7 *= norm1.w;\r\n    vec4 nz = mix(vec4(dot(g0, vec3(f0.x, f0.y, f0.z)), dot(g1, vec3(f1.x, f0.y, f0.z)),\r\n        dot(g2, vec3(f0.x, f1.y, f0.z)), dot(g3, vec3(f1.x, f1.y, f0.z))),\r\n        vec4(dot(g4, vec3(f0.x, f0.y, f1.z)), dot(g5, vec3(f1.x, f0.y, f1.z)),\r\n            dot(g6, vec3(f0.x, f1.y, f1.z)), dot(g7, vec3(f1.x, f1.y, f1.z))), f.z);\r\n    return 2.2 * mix(mix(nz.x,nz.z,f.y), mix(nz.y,nz.w,f.y), f.x);\r\n}\r\nfloat Perlin(vec2 P) { return Perlin(vec3(P, 0.0)); }\r\n`;\r\n\r\nexport default frag;"},"lineCount":null}},"error":null,"hash":"bd8b52afa1c8d0b84db72e1e2fc1e160","cacheData":{"env":{}}}